<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>WBX</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2022-02-05T20:54:23+08:00</updated> <author> <name>Boxuan Wang</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 Boxuan Wang </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>arch linux下的纯汇编使用</title><link href="/posts/archlinux%E4%B8%8B%E7%9A%84%E7%BA%AF%E6%B1%87%E7%BC%96%E4%BD%BF%E7%94%A8/" rel="alternate" type="text/html" title="arch linux下的纯汇编使用" /><published>2022-02-01T03:53:10+08:00</published> <updated>2022-02-01T03:53:10+08:00</updated> <id>/posts/archlinux%E4%B8%8B%E7%9A%84%E7%BA%AF%E6%B1%87%E7%BC%96%E4%BD%BF%E7%94%A8/</id> <content src="/posts/archlinux%E4%B8%8B%E7%9A%84%E7%BA%AF%E6%B1%87%E7%BC%96%E4%BD%BF%E7%94%A8/" /> <author> <name>Boxuan Wang</name> </author> <category term="archlinux" /> <category term="nasm" /> <summary> 首先安装汇编器，我们使用nasm，arch linux使用如下命令即可安装 sudo pacman -S nasm 创建一个名为helloworld.asm的汇编源文件用于存储源代码，使用汇编器及链接器生成目标文件及可重定位文件 vim helloworld.asm nasm -f elf -o helloworld.o helloworld.asm ld -m elf_i386 -s -o helloworld helloworld.o ./helloworld 测试代码如下，该例程用于输出一个字符串至标准输出设备上 segment .data msg db "Hello,world!",10 len equ $-msg segment .text global _start _start: mov eax,4 mov ebx,1 ... </summary> </entry> <entry><title>arch linux下的docker环境搭建</title><link href="/posts/archlinux%E4%B8%8Bdocker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/" rel="alternate" type="text/html" title="arch linux下的docker环境搭建" /><published>2022-02-01T02:38:17+08:00</published> <updated>2022-02-05T20:53:18+08:00</updated> <id>/posts/archlinux%E4%B8%8Bdocker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id> <content src="/posts/archlinux%E4%B8%8Bdocker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/" /> <author> <name>Boxuan Wang</name> </author> <category term="archlinux" /> <category term="docker" /> <summary> arch linux安装docker更为简单，运行如下命令即可 # 安装docker sudo pacman -S docker # 将当前用户加入docker组 sudo gpasswd -a ${USER} docker # 开机自启 sudo systemctl enable docker.service sudo systemctl enable docker.socket # 启动docker sudo systemctl start docker.socket # 提权 sudo chmod 777 /var/run/docker.sock </summary> </entry> <entry><title>ubuntu下的docker环境搭建</title><link href="/posts/ubuntu%E4%B8%8Bdocker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/" rel="alternate" type="text/html" title="ubuntu下的docker环境搭建" /><published>2022-02-01T02:07:25+08:00</published> <updated>2022-02-01T02:07:25+08:00</updated> <id>/posts/ubuntu%E4%B8%8Bdocker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id> <content src="/posts/ubuntu%E4%B8%8Bdocker%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/" /> <author> <name>Boxuan Wang</name> </author> <category term="ubuntu" /> <category term="docker" /> <summary> 现在安装docker已经非常简单了，可以使用官方安装脚本自动安装： curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun 脚本自动安装虽然省事，但是在使用过程中反复出现权限问题，每次使用都需要赋予权限，很是麻烦，貌似手动安装在第一次赋予权限即可，所以推荐使用如下命令进行手动安装： # 更新apt包索引并安装包以允许apt通过 HTTPS 使用存储库： sudo apt-get update sudo apt-get install apt-transport-https \ ca-certificates \ curl \ gnupg-agent \ ... </summary> </entry> <entry><title>arch linux下的bochs安装及bootloader测试</title><link href="/posts/archlinux%E4%B8%8Bbochs%E5%AE%89%E8%A3%85%E5%8F%8Abootloader%E6%B5%8B%E8%AF%95/" rel="alternate" type="text/html" title="arch linux下的bochs安装及bootloader测试" /><published>2022-02-01T01:38:07+08:00</published> <updated>2022-02-05T20:53:18+08:00</updated> <id>/posts/archlinux%E4%B8%8Bbochs%E5%AE%89%E8%A3%85%E5%8F%8Abootloader%E6%B5%8B%E8%AF%95/</id> <content src="/posts/archlinux%E4%B8%8Bbochs%E5%AE%89%E8%A3%85%E5%8F%8Abootloader%E6%B5%8B%E8%AF%95/" /> <author> <name>Boxuan Wang</name> </author> <category term="bochs" /> <category term="bootloader" /> <summary> bochs，qemu等都可以做模拟机供我们开发操作系统，在使用时，我们需要调试程序，所以采用源码编译，目前最新的版本为2.7，可以从此下载。 安装 首先安装依赖(arch linux不需要安装依赖，直接编译就好)： sudo apt-get install build-essential xorg-dev bison libgtk2.0-dev g++ 其次将源码解压缩，打开调试支持 tar -zxvf bochs-2.7.tar.gz cd bochs-2.7 sudo ./configure --enable-debugger 清除配置时生成的中间文件，并重新编译、安装 # 如果不进行清除，则会编译失败，不是很清楚造成这个问题的原因； make clean make sudo make install 测试 我们自己写一个最简单的nasm汇编程序，制作为b... </summary> </entry> <entry><title>ubuntu下交换control与caplock按键</title><link href="/posts/ubuntu%E4%B8%8B%E4%BA%A4%E6%8D%A2ctrl%E4%B8%8Ecapslock/" rel="alternate" type="text/html" title="ubuntu下交换control与caplock按键" /><published>2022-02-01T01:34:13+08:00</published> <updated>2022-02-01T01:34:13+08:00</updated> <id>/posts/ubuntu%E4%B8%8B%E4%BA%A4%E6%8D%A2ctrl%E4%B8%8Ecapslock/</id> <content src="/posts/ubuntu%E4%B8%8B%E4%BA%A4%E6%8D%A2ctrl%E4%B8%8Ecapslock/" /> <author> <name>Boxuan Wang</name> </author> <category term="ubuntu" /> <category term="键盘策略" /> <summary> Ubuntu下可编辑/etc/default/keyboard文件 sudo vim /etc/default/keyboard 修改XKBOPTIONS一行进行交换 XKBOPTIONS="ctrl:swapcpas" 重新生效键盘策略 sudo dpkg-reconfigure keyboard-configuration </summary> </entry> </feed>
